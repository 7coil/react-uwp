{
  "fileName": "D:/react-uwp/src/CheckBox/index.tsx",
  "name": "\"D:/react-uwp/src/CheckBox/index\"",
  "exports": [
    {
      "name": "DataProps",
      "documentation": ""
    },
    {
      "name": "CheckBoxProps",
      "documentation": ""
    },
    {
      "name": "CheckBoxState",
      "documentation": ""
    },
    {
      "name": "CheckBox",
      "documentation": ""
    },
    {
      "name": "default",
      "documentation": "",
      "extends": [
        "CheckBox"
      ]
    }
  ],
  "members": [
    {
      "name": "DataProps",
      "members": [
        {
          "name": "defaultChecked",
          "documentation": "Checkbox is checked if `true`.",
          "isRequired": false,
          "type": "boolean"
        },
        {
          "name": "onCheck",
          "documentation": "`Callback` function that is fired when the checkbox is checked.",
          "isRequired": false,
          "type": "(checked?: boolean) => void"
        },
        {
          "name": "labelPosition",
          "documentation": "If use `label`, `labelPosition` to control label position.",
          "isRequired": false,
          "type": "\"left\" | \"right\""
        },
        {
          "name": "background",
          "documentation": "Set custom background to CheckBbox.",
          "isRequired": false,
          "type": "string"
        }
      ],
      "documentation": ""
    },
    {
      "name": "CheckBoxProps",
      "documentation": "",
      "extends": [
        "DataProps",
        "HTMLAttributes"
      ]
    },
    {
      "name": "CheckBoxState",
      "members": [
        {
          "name": "checked",
          "documentation": "",
          "isRequired": false,
          "type": "boolean"
        },
        {
          "name": "hovered",
          "documentation": "",
          "isRequired": false,
          "type": "boolean"
        }
      ],
      "documentation": ""
    },
    {
      "documentation": "",
      "name": "emptyFunc",
      "type": "() => void",
      "initializerText": " () => {}"
    },
    {
      "name": "emptyFunc",
      "documentation": "",
      "type": "() => void"
    },
    {
      "name": "CheckBox",
      "exports": [
        {
          "name": "prototype",
          "documentation": "",
          "type": "prototype"
        },
        {
          "name": "defaultProps",
          "initializerText": " {\n    defaultChecked: null,\n    onCheck: emptyFunc,\n    onClick: emptyFunc,\n    size: 20,\n    labelPosition: \"right\",\n    label: void 0\n  }",
          "documentation": "",
          "type": "CheckBoxProps"
        },
        {
          "name": "contextTypes",
          "initializerText": " { theme: PropTypes.object }",
          "documentation": "",
          "type": "{ theme: Requireable<any>; }"
        }
      ],
      "members": [
        {
          "name": "state",
          "initializerText": " {\n    checked: this.props.defaultChecked\n  }",
          "documentation": "",
          "type": "CheckBoxState"
        },
        {
          "name": "context",
          "documentation": "",
          "type": "{ theme: any; }"
        },
        {
          "name": "rootElm",
          "documentation": "rootElm `HTMLDivElement`",
          "type": "HTMLDivElement"
        },
        {
          "name": "componentWillReceiveProps",
          "documentation": "",
          "type": "(nextProps: CheckBoxProps) => void"
        },
        {
          "name": "toggleChecked",
          "initializerText": " (e?: React.SyntheticEvent<HTMLDivElement>) => {\n    let checked: boolean;\n    this.setState((prevState, prevProps) => {\n      checked = !prevState.checked;\n      return { checked };\n    }, () => this.props.onCheck(checked));\n  }",
          "documentation": "`Public` Toggle Checked Method.",
          "type": "(e?: SyntheticEvent<HTMLDivElement>) => void"
        },
        {
          "name": "handleClick",
          "initializerText": " (e: React.MouseEvent<HTMLDivElement>) => {\n    const { disabled, onClick } = this.props;\n    if (!disabled) this.toggleChecked(e);\n    onClick(e);\n  }",
          "documentation": "",
          "type": "(e: MouseEvent<HTMLDivElement>) => void"
        },
        {
          "name": "handleMouseEnter",
          "initializerText": " (e: React.MouseEvent<HTMLDivElement>) => {\n    this.setState({ hovered: true });\n  }",
          "documentation": "",
          "type": "(e: MouseEvent<HTMLDivElement>) => void"
        },
        {
          "name": "handleMouseLeave",
          "initializerText": " (e: React.MouseEvent<HTMLDivElement>) => {\n    this.setState({ hovered: false });\n  }",
          "documentation": "",
          "type": "(e: MouseEvent<HTMLDivElement>) => void"
        },
        {
          "name": "render",
          "documentation": "",
          "type": "() => Element"
        }
      ],
      "documentation": "",
      "extends": [
        "Component"
      ]
    },
    {
      "name": "getStyles",
      "documentation": "",
      "type": "(checkBox: CheckBox) => { root?: CSSProperties; iconParent?: { style?: CSSProperties; hoverStyle?..."
    }
  ],
  "documentation": "",
  "type": "typeof \"D:/react-uwp/src/CheckBox/index\""
}