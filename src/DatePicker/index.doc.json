{
  "fileName": "D:/react-uwp/src/DatePicker/index.tsx",
  "name": "\"D:/react-uwp/src/DatePicker/index\"",
  "exports": [
    {
      "name": "DataProps",
      "documentation": ""
    },
    {
      "name": "DatePickerProps",
      "documentation": ""
    },
    {
      "name": "DatePickerState",
      "documentation": ""
    },
    {
      "name": "DatePicker",
      "documentation": ""
    },
    {
      "name": "default",
      "documentation": "",
      "extends": [
        "DatePicker"
      ]
    }
  ],
  "members": [
    {
      "name": "DataProps",
      "members": [
        {
          "name": "defaultDate",
          "documentation": "Set default date.",
          "isRequired": false,
          "type": "Date"
        },
        {
          "name": "onChangeDate",
          "documentation": "`onChangeDate` callback.",
          "isRequired": false,
          "type": "(date?: Date) => void"
        },
        {
          "name": "maxYear",
          "documentation": "Set can choose max year.",
          "isRequired": false,
          "type": "number"
        },
        {
          "name": "minYear",
          "documentation": "Set can choose min year.",
          "isRequired": false,
          "type": "number"
        },
        {
          "name": "inputItemHeight",
          "documentation": "Set `Input` element height.",
          "isRequired": false,
          "type": "number"
        },
        {
          "name": "pickerItemHeight",
          "documentation": "Set `Picker` element height.",
          "isRequired": false,
          "type": "number"
        }
      ],
      "documentation": ""
    },
    {
      "name": "DatePickerProps",
      "documentation": "",
      "extends": [
        "DataProps",
        "HTMLAttributes"
      ]
    },
    {
      "name": "DatePickerState",
      "members": [
        {
          "name": "showPicker",
          "documentation": "",
          "isRequired": false,
          "type": "boolean"
        },
        {
          "name": "currDate",
          "documentation": "",
          "isRequired": false,
          "type": "Date"
        }
      ],
      "documentation": ""
    },
    {
      "documentation": "",
      "name": "emptyFunc",
      "type": "() => void",
      "initializerText": " () => {}"
    },
    {
      "name": "emptyFunc",
      "documentation": "",
      "type": "() => void"
    },
    {
      "name": "DatePicker",
      "exports": [
        {
          "name": "prototype",
          "documentation": "",
          "type": "prototype"
        },
        {
          "name": "defaultProps",
          "initializerText": " {\n    inputItemHeight: 28,\n    pickerItemHeight: 44,\n    onChangeDate: emptyFunc,\n    defaultDate: new Date(),\n    maxYear: new Date().getFullYear() + 50,\n    minYear: new Date().getFullYear() - 50\n  }",
          "documentation": "",
          "type": "DatePickerProps"
        },
        {
          "name": "contextTypes",
          "initializerText": " { theme: PropTypes.object }",
          "documentation": "",
          "type": "{ theme: Requireable<any>; }"
        }
      ],
      "members": [
        {
          "name": "state",
          "initializerText": " {\n    showPicker: false,\n    currDate: this.props.defaultDate\n  }",
          "documentation": "",
          "type": "DatePickerState"
        },
        {
          "name": "prevDate",
          "initializerText": " this.props.defaultDate",
          "documentation": "",
          "type": "Date"
        },
        {
          "name": "context",
          "documentation": "",
          "type": "{ theme: any; }"
        },
        {
          "name": "monthListView",
          "documentation": "",
          "type": "any"
        },
        {
          "name": "dateListView",
          "documentation": "",
          "type": "any"
        },
        {
          "name": "yearListView",
          "documentation": "",
          "type": "any"
        },
        {
          "name": "monthIndex",
          "initializerText": " 0",
          "documentation": "",
          "type": "number"
        },
        {
          "name": "dateIndex",
          "initializerText": " 0",
          "documentation": "",
          "type": "number"
        },
        {
          "name": "yearIndex",
          "initializerText": " 0",
          "documentation": "",
          "type": "number"
        },
        {
          "name": "componentWillReceiveProps",
          "documentation": "",
          "type": "(nextProps: DatePickerProps) => void"
        },
        {
          "name": "componentDidUpdate",
          "documentation": "",
          "type": "() => void"
        },
        {
          "name": "toggleShowPicker",
          "initializerText": " (showPicker?: any) => {\n    const { currDate } = this.state;\n    if (typeof showPicker === \"boolean\") {\n      if (showPicker !== this.state.showPicker) {\n        this.setState({ showPicker });\n        if (showPicker) {\n          this.prevDate = currDate;\n        }\n      }\n    } else {\n      this.setState((prevState, prevProps) => {\n        const showPicker = !prevState.showPicker;\n        if (showPicker) {\n          this.prevDate = currDate;\n        }\n        return { showPicker };\n      });\n    }\n  }",
          "documentation": "",
          "type": "(showPicker?: any) => void"
        },
        {
          "name": "setDate",
          "initializerText": " (date?: number, month?: number, year?: number) => {\n    const { currDate } = this.state;\n    const currDateNumb = date === void 0 ? currDate.getDate() : date;\n    const currMonth = month === void 0 ? currDate.getMonth() : month;\n    const currYear = year === void 0 ? currDate.getFullYear() : year;\n    this.setState({ currDate: new Date(currYear, currMonth, currDateNumb) });\n  }",
          "documentation": "",
          "type": "(date?: number, month?: number, year?: number) => void"
        },
        {
          "name": "render",
          "documentation": "",
          "type": "() => Element"
        }
      ],
      "documentation": "",
      "extends": [
        "Component"
      ]
    },
    {
      "name": "getStyles",
      "documentation": "",
      "type": "(datePicker: DatePicker) => { root?: CSSProperties; button?: CSSProperties; pickerModal?: CSSProp..."
    }
  ],
  "documentation": "",
  "type": "typeof \"D:/react-uwp/src/DatePicker/index\""
}