{
  "fileName": "D:/electron-app-dev/src/react-uwp/src/controls/AutoSuggestBox/index.tsx",
  "name": "\"D:/electron-app-dev/src/react-uwp/src/controls/AutoSuggestBox/index\"",
  "exports": [
    {
      "name": "DataProps",
      "documentation": ""
    },
    {
      "name": "AutoSuggestBoxProps",
      "documentation": ""
    },
    {
      "name": "AutoSuggestBoxState",
      "documentation": ""
    },
    {
      "name": "AutoSuggestBox",
      "documentation": ""
    },
    {
      "name": "default",
      "documentation": "",
      "extends": [
        "AutoSuggestBox"
      ]
    }
  ],
  "members": [
    {
      "name": "DataProps",
      "members": [
        {
          "name": "onChangeValue",
          "documentation": "`AutoSuggestBox` onChange callback.",
          "isRequired": false,
          "type": "(value: string) => void"
        },
        {
          "name": "listSource",
          "documentation": "Array of strings or nodes used to populate the list.",
          "isRequired": false,
          "type": "ReactNode[]"
        }
      ],
      "documentation": ""
    },
    {
      "name": "AutoSuggestBoxProps",
      "documentation": "",
      "extends": [
        "DataProps",
        "HTMLAttributes"
      ]
    },
    {
      "name": "AutoSuggestBoxState",
      "members": [
        {
          "name": "currListSource",
          "documentation": "",
          "isRequired": false,
          "type": "ReactNode[]"
        },
        {
          "name": "typing",
          "documentation": "",
          "isRequired": false,
          "type": "boolean"
        }
      ],
      "documentation": ""
    },
    {
      "documentation": "",
      "name": "iconStyle",
      "type": "CSSProperties",
      "initializerText": " { color: \"#a9a9a9\" }"
    },
    {
      "name": "iconStyle",
      "documentation": "",
      "type": "CSSProperties"
    },
    {
      "name": "AutoSuggestBox",
      "exports": [
        {
          "name": "prototype",
          "documentation": "",
          "type": "prototype"
        },
        {
          "name": "defaultProps",
          "initializerText": " {\n\t\tonChangeValue: () => {}\n\t}",
          "documentation": "",
          "type": "AutoSuggestBoxProps"
        },
        {
          "name": "contextTypes",
          "initializerText": " { theme: React.PropTypes.object }",
          "documentation": "",
          "type": "{ theme: Requireable<any>; }"
        }
      ],
      "members": [
        {
          "name": "state",
          "initializerText": " {\n\t\tcurrListSource: this.props.listSource\n\t}",
          "documentation": "",
          "type": "AutoSuggestBoxState"
        },
        {
          "name": "context",
          "documentation": "",
          "type": "{ theme: ThemeType; }"
        },
        {
          "name": "input",
          "documentation": "`Input` component.",
          "type": "any"
        },
        {
          "name": "componentWillReceiveProps",
          "documentation": "",
          "type": "(nextProps: AutoSuggestBoxProps) => void"
        },
        {
          "name": "handleChange",
          "initializerText": " (e?: any | React.SyntheticEvent<HTMLInputElement>) => {\n\t\tlet event: React.SyntheticEvent<HTMLInputElement>;\n\t\tevent = e;\n\t\tconst { currentTarget: { value } } = event;\n\t\tthis.props.onChangeValue(value);\n\t\tif (value) {\n\t\t\tthis.setState({ typing: true });\n\t\t} else {\n\t\t\tthis.setState({ typing: false });\n\t\t}\n\t}",
          "documentation": "",
          "type": "(e?: any) => void"
        },
        {
          "name": "getValue",
          "initializerText": " () => this.input.getValue()",
          "documentation": "`Get` input value method.",
          "type": "() => any"
        },
        {
          "name": "setValue",
          "initializerText": " (value: string) => this.input.setValue(value)",
          "documentation": "`Set` input value method.",
          "type": "(value: string) => any"
        },
        {
          "name": "resetValue",
          "initializerText": " (e: React.MouseEvent<HTMLInputElement>) => {\n\t\tthis.setValue(\"\");\n\t\tthis.setState({\n\t\t\tcurrListSource: [],\n\t\t\ttyping: false\n\t\t});\n\t\tthis.input.input.focus();\n\t}",
          "documentation": "`Reset` input value method.",
          "type": "(e: MouseEvent<HTMLInputElement>) => void"
        },
        {
          "name": "handleChooseItem",
          "initializerText": " (index: number) => {\n\t\tconst item: any = this.props.listSource[index];\n\t\tthis.setValue(typeof item === \"object\" ? item.props.value : item);\n\t}",
          "documentation": "",
          "type": "(index: number) => void"
        },
        {
          "name": "render",
          "documentation": "",
          "type": "() => Element"
        }
      ],
      "documentation": "",
      "extends": [
        "Component"
      ]
    },
    {
      "name": "getStyles",
      "documentation": "",
      "type": "(autoSuggestBox: AutoSuggestBox) => { root?: CSSProperties; listView?: CSSProperties; }"
    }
  ],
  "documentation": "",
  "type": "typeof \"D:/electron-app-dev/src/react-uwp/src/controls/AutoSuggestBox/index\""
}